<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="genlab.core.algo">
      <algo
            class="genlab.igraph.algos.measure.IGraphAveragePathLengthAlgo"
            id="genlab.igraph.algos.measure.AveragePathLengthAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.measure.IGraphComponentsAlgo"
            id="genlab.igraph.algos.measure.IGraphComponentsAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.measure.IGraphClusteringAlgo"
            id="genlab.igraph.algos.measure.IGraphClusteringAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.WattsStrogatzGeneratorAlgo"
            id="genlab.igraph.algos.generation.WattsStrogatzGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.GRGGeneratorAlgo"
            id="genlab.igraph.algos.generation.GRGGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.ErdosRenyiGNPGeneratorAlgo"
            id="genlab.igraph.algos.generation.ErdosRenyiGNPGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.ForestFireGeneratorAlgo"
            id="genlab.igraph.algos.generation.ForestFireGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.SIIGeneratorAlgo"
            id="genlab.igraph.algos.generation.SIIGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.ErdosRenyiGNMGeneratorAlgo"
            id="genlab.igraph.algos.generation.ErdosRenyiGNMGeneratorAlgo">
      </algo>
      <algo
            class="genlab.igraph.algos.transform.RewireGraph"
            id="genlab.igraph.algos.transform.RewireGraph">
      </algo>
      <algo
            class="genlab.igraph.algos.generation.LCFGenerator"
            id="genlab.igraph.algos.generation.LCFGenerator">
      </algo>
      <algo
            class="genlab.igraph.algos.compare.Isomorphic"
            id="genlab.igraph.algos.compare.Isomorphic">
      </algo>
      <algo
            class="genlab.igraph.algos.compare.VF2Isomorphic"
            id="genlab.igraph.algos.compare.VF2Isomorphic">
      </algo>
      <algo
            class="genlab.igraph.algos.measure.IGraphEdgeBetweenessAlgo"
            id="genlab.igraph.algos.measure.IGraphBetweeness">
      </algo>
   </extension>
   <extension
         point="genlab.core.doc">
      <author
            id="genlab.igraph.doc.authors.gabor"
            name="Gabor Csardi">
      </author>
      <author
            id="genlab.igraph.doc.authors.nepusz"
            name="Tamas Nepusz">
      </author>
      <author
            id="genlab.igraph.doc.authors.KeithBriggs"
            name="Keith Briggs">
      </author>
      <library
            author="genlab.igraph.doc.authors.gabor"
            description="The igraph library is developed for complex network research."
            id="genlab.igraph.doc.library.igraph"
            licence_name="GNU General Public License v2 (or higher)"
            licence_url="http://igraph.sourceforge.net/license.html"
            name="IGraph"
            url="http://igraph.sourceforge.net/">
         <integrator_author_id
               id="genlab.core.doc.authors.samthiriot">
         </integrator_author_id>
         <original_author_id
               id="genlab.igraph.doc.authors.gabor">
         </original_author_id>
         <original_author_id
               id="genlab.igraph.doc.authors.nepusz">
         </original_author_id>
         <more_info
               content="the igraph homepage"
               url="http://igraph.sourceforge.net/">
         </more_info>
         <more_info
               content="the wikipedia page on Java Native Access, the technology used to interface genlab with igraph"
               url="http://en.wikipedia.org/wiki/Java_Native_Access">
         </more_info>
      </library>
      <docalgo
            algo_id="genlab.igraph.algos.measure.AveragePathLengthAlgo"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity="O(|V||E|) |V| and |E| are the number of vertices and edges in the graph">
         <original_author_id
               id="genlab.igraph.doc.authors.gabor">
         </original_author_id>
         <integrator_author_id
               id="genlab.core.doc.authors.samthiriot">
         </integrator_author_id>
         <more_info
               content="the wikipedia page on average path length"
               url="http://en.wikipedia.org/wiki/Average_path_length">
         </more_info>
         <more_info
               content="the documentation of the igraph C library documentation for this function"
               url="http://igraph.sourceforge.net/doc/html/ch13s02.html#igraph_average_path_length">
         </more_info>
         <more_info
               content="the documentation of the R/igraph library for this function"
               url="http://igraph.sourceforge.net/doc/R/shortest.paths.html">
         </more_info>
         <more_info
               content="West, D.B. (1996). &lt;i&gt;Introduction to Graph Theory&lt;/i&gt;. Upper Saddle River, N.J.: Prentice Hall. ">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.measure.IGraphComponentsAlgo"
            implementation_notes="This implementation relies on the C version of the igraph library. &#x0A;&lt;ul&gt;&#x0A;&lt;li&gt;The &lt;i&gt;connectivity&lt;/i&gt; of the graph is measured by calling the method &lt;code&gt;igraph_is_connected&lt;/code&gt; with IGRAPH_WEAK for the connectivity mode (only used when the network is directed).&lt;/li&gt;&#x0A;&lt;li&gt;The &lt;i&gt;components&lt;/i&gt; of the graph are computed using the method &lt;code&gt;igraph_clusters&lt;/code&gt; with IGRAPH_WEAK as a connectivity mode&#x0A;&lt;/ul&gt;&#x0A;"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity=" O(|V|+|E|), |V| and |E| are the number of vertices and edges in the graph">
         <original_author_id
               id="genlab.igraph.doc.authors.gabor">
         </original_author_id>
         <integrator_author_id
               id="genlab.core.doc.authors.samthiriot">
         </integrator_author_id>
         <more_info
               content="the R/igraph documentation on clusters"
               url="http://igraph.sourceforge.net/doc/R/clusters.html">
         </more_info>
         <more_info
               content="the documentation of the C igraph library for this function"
               url="http://igraph.sourceforge.net/doc/html/ch13s04.html#igraph_clusters">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.measure.IGraphClusteringAlgo"
            description="We use IGRAPH_TRANSITIVITY_NAN for the mode."
            implementation_notes="We use IGRAPH_TRANSITIVITY_NAN for the mode."
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity=" O(|V|*d^2), |V| is the number of vertices in the graph, d is the average node degree.">
         <more_info
               content="S. Wasserman and K. Faust: Social Network Analysis: Methods and Applications. Cambridge: Cambridge University Press, 1994.">
         </more_info>
         <more_info
               content="the igraph page for this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch13s11.html#igraph_transitivity_local_undirected">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.WattsStrogatzGeneratorAlgo"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity=" O(|V|*d^o+|E|), |V| ans |E| are the number of vertices and edges, d is the average degree, o is the nei argument.">
         <more_info
               content="wikipedia page on this algorithm"
               url="http://en.wikipedia.org/wiki/Watts_and_Strogatz_model">
         </more_info>
         <more_info
               content="igraph documentation on this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_watts_strogatz_game">
         </more_info>
         <more_info
               content="Duncan J Watts and Steven H Strogatz: Collective dynamics of “small world” networks, Nature 393, 440-442, 1998.">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.GRGGeneratorAlgo"
            description="A geometric random graph is created by dropping points (=vertices) randomly to the unit square and then connecting all those pairs which are less than radius apart in Euclidean norm."
            library_id="genlab.graphstream.doc.library.graphstream"
            time_complexity="O(|V|^2+|E|)">
         <more_info
               content="igraph documentatipon"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_grg_game">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.ErdosRenyiGNPGeneratorAlgo"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity=": O(|V|+|E|), the number of vertices plus the number of edges in the graph.">
         <more_info
               content="igraph documentation on this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_grg_game">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.ForestFireGeneratorAlgo"
            library_id="genlab.igraph.doc.library.igraph">
         <more_info
               content="Jure Leskovec, Jon Kleinberg and Christos Faloutsos. Graphs over time: densification laws, shrinking diameters and possible explanations. KDD &apos;05: Proceeding of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining , 177--187, 2005.">
         </more_info>
         <more_info
               content="Novel version of the algo used for this implementation"
               url="http://www.cs.cmu.edu/~jure/pubs/powergrowth-tkdd.pdf">
         </more_info>
         <more_info
               content="igraph documentation for this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_forest_fire_game">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.SIIGeneratorAlgo"
            library_id="genlab.igraph.doc.library.igraph">
         <more_info
               content="igraph documentation"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.ErdosRenyiGNMGeneratorAlgo"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity=": O(|V|+|E|), the number of vertices plus the number of edges in the graph.">
         <more_info
               content="igraph documentation for this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_erdos_renyi_game">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.transform.RewireGraph"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity="O(count)">
         <more_info
               content="igraph documentation"
               url="http://igraph.sourceforge.net/doc/html/ch09s02.html#igraph_rewire">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.generation.LCFGenerator"
            library_id="genlab.igraph.doc.library.igraph">
         <more_info
               content="description of the LCF notation in Worlfram Alpha"
               url="http://mathworld.wolfram.com/LCFNotation.html">
         </more_info>
         <more_info
               content="igraph documentation for this function"
               url="http://igraph.sourceforge.net/doc/html/ch09s01.html#igraph_lcf">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.compare.Isomorphic"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity="exponential">
         <more_info
               content="the igraph documentation for this algorithm"
               url="http://igraph.sourceforge.net/doc/html/ch16s01.html#igraph_isomorphic">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.compare.VF2Isomorphic"
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity="exponential">
         <more_info
               content="igraph documentation"
               url="http://igraph.sourceforge.net/doc/html/ch16s03.html#igraph_count_isomorphisms_vf2">
         </more_info>
      </docalgo>
      <docalgo
            algo_id="genlab.igraph.algos.measure.IGraphBetweeness"
            description="The betweenness centrality of a vertex is the number of geodesics going through it. If there are more than one geodesic between two vertices, the value of these geodesics are weighted by one over the number of geodesics."
            library_id="genlab.igraph.doc.library.igraph"
            time_complexity="O(|V||E|), |V| and |E| are the number of vertices and edges in the graph">
         <more_info
               content="igraph official documentation"
               url="http://igraph.sourceforge.net/doc-0.6/html/ch13s05.html#igraph_betweenness">
         </more_info>
      </docalgo>
   </extension>

</plugin>
